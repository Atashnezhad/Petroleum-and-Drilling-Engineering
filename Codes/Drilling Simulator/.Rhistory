# kf <- 0.04 # cutter/rock friction coefficient
f <- 0.5 # thermal response function
# alpha_f <- 1 #
#---------------------------------------------
DataTimeInter <- 1 # sec
#-----------------------------BG Column
# BG <- read.csv("C:/Users/DASLAB Hareland 3/Desktop/R calc file/ROP drafts/BG.csv", header = T)
BG <- read.csv("/cloud/project/BG.csv", header = T)
BG <- 0.01*BG
Num_of_Data <- nrow(BG)
# BU_BG <- read.csv("C:/Users/DASLAB Hareland 3/Desktop/R calc file/ROP drafts/BU_BG.csv", header = T)
BU_BG <- read.csv("/cloud/project/BU_BG.csv", header = T)
BU_BG <- 0.01*BU_BG
Num_of_Data <- nrow(BU_BG)
EXPR_new <- 0.15 #Back up cutter exposed when both cutters are new
EXPR_realtime <- matrix(0,Num_of_Data,1)
colnames(EXPR_realtime) <- "inch"
#-----ROP (ft/hr)-----------------------------
ROP <- matrix(0,Num_of_Data,1)
ROP <- data.frame(ROP)
colnames(ROP) <- 'ROP (ft/hr)'
#----------------------------WOB Column
# WOB <- read.csv("C:/Users/DASLAB Hareland 3/Desktop/R calc file/ROP drafts/WOB.csv", header = T)
WOB <- read.csv("/cloud/project/WOB.csv", header = T)
WOC <- WOB/NOC
colnames(WOC) <- 'WOC,lbf'
#----------------------------RPM Column
# RPM <- read.csv("C:/Users/DASLAB Hareland 3/Desktop/R calc file/ROP drafts/RPM.csv", header = T)
RPM <- read.csv("/cloud/project/RPM.csv", header = T)
#----------------------------CCS Column
# CCS <- read.csv("C:/Users/DASLAB Hareland 3/Desktop/R calc file/ROP drafts/CCS.csv", header = T)
CCS <- read.csv("/cloud/project/CCS.csv", header = T)
#----------------------------Tf Column
# Tf <- read.csv("C:/Users/DASLAB Hareland 3/Desktop/R calc file/ROP drafts/Tf.csv", header = T)
Tf <- read.csv("/cloud/project/Tf.csv", header = T)
#----------------------------kf Column
# kf <- read.csv("C:/Users/DASLAB Hareland 3/Desktop/R calc file/ROP drafts/kf.csv", header = T)
kf <- read.csv("/cloud/project/Kf.csv", header = T)
#----------------------------alpha_f Column
# alpha_f <- read.csv("C:/Users/DASLAB Hareland 3/Desktop/R calc file/ROP drafts/alpha_f.csv", header = T)
alpha_f <- read.csv("/cloud/project/alpha_f.csv", header = T)
#----------------------------thermal response function
# f <- read.csv("C:/Users/DASLAB Hareland 3/Desktop/R calc file/ROP drafts/f.csv", header = T)
f <- read.csv("/cloud/project/f.csv", header = T)
#----------------------------khf (w/cm/C)
# khf <- read.csv("C:/Users/DASLAB Hareland 3/Desktop/R calc file/ROP drafts/khf.csv", header = T)
khf <- read.csv("/cloud/project/Khf.csv", header = T)
#----------------------------FN1 and FN2
#normal forces on cutter and back up cutter
FN1 <- matrix(0,Num_of_Data,1)
colnames(FN1) <- "Lbf"
FN2 <- matrix(0,Num_of_Data,1)
colnames(FN2) <- "Lbf"
#=============Tw and BU_Tw
Tw <- matrix(0,Num_of_Data,1)
colnames(Tw) <- "c"
BU_Tw <- matrix(0,Num_of_Data,1)
colnames(BU_Tw) <- "c"
#-----Cutters work (base and backup)--
work1 <- matrix(0,Num_of_Data,1)
colnames(work1) <- "ft.Lbf"
work2 <- matrix(0,Num_of_Data,1)
colnames(work2) <- "ft.Lbf"
workT <- matrix(0,Num_of_Data,1)
colnames(workT) <- "ft.Lbf"
BU_work1 <- matrix(0,Num_of_Data,1)
colnames(BU_work1) <- "ft.Lbf"
BU_work2 <- matrix(0,Num_of_Data,1)
colnames(BU_work2) <- "ft.Lbf"
BU_workT <- matrix(0,Num_of_Data,1)
colnames(BU_workT) <- "ft.Lbf"
#average wear coff of PDC and STUD 1 and 2
#1
alphaAve <- matrix(0,Num_of_Data,1)
colnames(alphaAve) <- "(ft.Lbf)/inch3"
#2
BU_alphaAve <- matrix(0,Num_of_Data,1)
colnames(BU_alphaAve) <- "(ft.Lbf)/inch3"
#1
cutter_worn_vol_each_datapoint <- matrix(0,Num_of_Data,1)
colnames(cutter_worn_vol_each_datapoint) <- "inch3"
#2
BU_cutter_worn_vol_each_datapoint <- matrix(0,Num_of_Data,1)
colnames(BU_cutter_worn_vol_each_datapoint) <- "inch3"
#1
comulative_cutter_worn_vol <- matrix(0,Num_of_Data,1)
colnames(comulative_cutter_worn_vol) <- "inch3"
#2
BU_comulative_cutter_worn_vol <- matrix(0,Num_of_Data,1)
colnames(BU_comulative_cutter_worn_vol) <- "inch3"
wear_cof_PDC <- 350000000 # (ft.Lbf)/inch3 of pure PDC material
wear_cof_STUD <- 20000 # (ft.Lbf)/inch3 of pure STUD material
#----------------------------Cutter Velocity (m/s) Column
Cutter_Velocity <- 2*pi*RPM*Re*0.0254/60
colnames(Cutter_Velocity) <- 'Cutter_Velocity,m/s'
#----------------------------cutter wear flat length,L (cm) Column
cutter_wearflat_length <- (BG*Dc/8)/sin(pi*BR/180)*2.54
colnames(cutter_wearflat_length) <- 'cutter_wearflat_length,cm'
BU_cutter_wearflat_length <- (BU_BG*Dc/8)/sin(pi*BR/180)*2.54
colnames(BU_cutter_wearflat_length) <- 'BU_cutter_wearflat_length,cm'
NeedToCovered <- (WOB/NOC)/(CCS)
colnames(NeedToCovered) <- 'NeedToCovered'
Max_DOC_OnCutterFace <- (Dc)*cos(BR*pi/180)
Max_DOC <- Max_DOC_OnCutterFace*cos(BR*pi/180)
#-------------------------------------------------------------------------
BGDc8 <- BG*Dc/8
colnames(BGDc8) <- 'BGDc8'
BGDc8Cos <- BGDc8*cos(BR*pi/180)
colnames(BGDc8Cos) <- 'BGDc8Cos'
BU_BGDc8 <- BU_BG*Dc/8
colnames(BU_BGDc8) <- 'BU_BGDc8'
BU_BGDc8Cos <- BU_BGDc8*cos(BR*pi/180)
colnames(BU_BGDc8Cos) <- 'BU_BGDc8Cos'
#difference between weighted area beneath the cutter and needed area to be covered
Diff_AwW_T_NeedToCovered <- 0 -NeedToCovered
colnames(Diff_AwW_T_NeedToCovered) <- 'Diff_AwW_T_NeedToCovered'
#-------------------------------------------------------------------------
#finding the depth of cut and BG/BU_BG
DOC_accuracy <- 0.0001 # accuracy for finding depth of cut
StepSize <- 0.001
wornVol_accuracy <- 0.0001 #cutter worn volume acuracy
addBG <- 0.01
#===================Cutter #1==================
#==============================================
DOC_real <- matrix(0,nrow=Num_of_Data,ncol=1)
AH_Matrix <- matrix(0,nrow=Num_of_Data,ncol=1)
AV_Matrix <- matrix(0,nrow=Num_of_Data,ncol=1)
DepthOfCut_P <- matrix(0,nrow=Num_of_Data,ncol=1)
DOC_OCF <- matrix(0,nrow=Num_of_Data,ncol=1)
AOCFClean <- matrix(0,nrow=Num_of_Data,ncol=1)
AWOBG <- matrix(0,nrow=Num_of_Data,ncol=1)
ACT <- matrix(0,nrow=Num_of_Data,ncol=1)
AH <- matrix(0,nrow=Num_of_Data,ncol=1)
AV <- matrix(0,nrow=Num_of_Data,ncol=1)
AwTotal <- matrix(0,nrow=Num_of_Data,ncol=1)
AwPDC <- matrix(0,nrow=Num_of_Data,ncol=1)
AwSTUD <- matrix(0,nrow=Num_of_Data,ncol=1)
#==============================================
#==============================================
#===================Cutter #2==================
#==============================================
BU_DOC_real <- matrix(0,nrow=Num_of_Data,ncol=1)
BU_AH_Matrix <- matrix(0,nrow=Num_of_Data,ncol=1)
BU_AV_Matrix <- matrix(0,nrow=Num_of_Data,ncol=1)
BU_DepthOfCut_P <- matrix(0,nrow=Num_of_Data,ncol=1)
BU_DOC_OCF <- matrix(0,nrow=Num_of_Data,ncol=1)
BU_AOCFClean <- matrix(0,nrow=Num_of_Data,ncol=1)
BU_AWOBG <- matrix(0,nrow=Num_of_Data,ncol=1)
BU_ACT <- matrix(0,nrow=Num_of_Data,ncol=1)
BU_AH <- matrix(0,nrow=Num_of_Data,ncol=1)
BU_AV <- matrix(0,nrow=Num_of_Data,ncol=1)
BU_AwTotal <- matrix(0,nrow=Num_of_Data,ncol=1)
BU_AwPDC <- matrix(0,nrow=Num_of_Data,ncol=1)
BU_AwSTUD <- matrix(0,nrow=Num_of_Data,ncol=1)
#==============================================
#==============================================
#1
cwv <- 0 # cutter worn volume counter "comulative"
#2
BU_cwv <- 0 # cutter worn volume counter "comulative" for back up cutter
plott <- function() {
#######################PLOTS
# #WOB
par(mfrow=c(1,8))
a <- data.frame(seq(1,Num_of_Data))
# #---------------------------------
plot(WOB[,1],a[,1], ylim = rev(range(a[,1])), ylab = "Depth ft", xlab = "", col="blue",
pch=1,title(expression(main = "WOB (lbf)"), adj = 0.5, line = 2, col.main = "blue"),xlim = c(0,45000))
par(new=TRUE)
#CCS
plot(CCS[,1],a[,1], ylim = rev(range(a[,1])), axes=F, ylab = NA, xlab = NA,
col="red",pch=2,title(expression(main = "CCS (psi)"), adj = 0.5, line = 0.7, col.main = "red"),xlim = c(0,50000))
# axis(side = 4)
# mtext(side = 4, line = 3, 'Number genes selected')
par(new=FALSE)
# #RPM
plot(RPM[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="red",pch=1,title(expression(main = "RPM"), col.main = "red"),xlim = c(0,400))
#cutter_worn_vol_each_datapoint
plot(cutter_worn_vol_each_datapoint[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="black",pch=1,title(expression(main = "Cutter worn volume each data point (in3)"), col.main = "black"))
par(new=TRUE)
plot(comulative_cutter_worn_vol[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="red",pch=2,title(expression(main = "Comulative cutter worn volume (in3)"), adj = 0.5, line = 0.7, col.main = "red"))
#ROP
plot(ROP[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="black",pch=1,title(expression(main = "ROP (ft/hr)")),xlim = c(0,500))
par(new=FALSE)
#BG
plot(BG[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="black",pch=1,title(expression(main = "Front Cutter BG"), col.main = "black"),xlim = c(0,10))
par(new=TRUE)
#BU_BG
plot(BU_BG[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="blue",pch=2,title(expression(main = "Back up Cutter BG"), adj = 0.5, line = 0.7, col.main = "blue"),xlim = c(0,10))
abline(v=8, col = "red", lty = 3)
par(new=FALSE)
#DOC_real
plot(DOC_real[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="black",pch=1,title(expression(main = "Front cutter real depth of cut (in)"), adj = 0.5, line = 3.2, col.main = "black"))
par(new=TRUE)
#DOC_real
plot(BU_DOC_real[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="red",pch=2,title(expression(main = "Back Up cutter real depth of cut (in)"), adj = 0.5, line = 1.9, col.main = "red"))
par(new=TRUE)
#
#EXPR_realtime
plot(EXPR_realtime[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="blue",pch=3,title(expression(main = "Real time Exposure (in)"), adj = 0.5, line = 0.7, col.main = "blue"),xlim = c(0,EXPR_new))
abline(v=EXPR_new, col = "gray60", lty = 1)
text(EXPR_new-0.005,Num_of_Data,"EXPR New",srt=90,pos=3,col="gray60")
abline(v=0, col = "gray60", lty = 1)
text(0.01,3,"EXPR = 0",srt=90,pos=3,col="gray60")
par(new=FALSE)
#AH
plot(AH_Matrix[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="blue",pch=1,title(expression(main = "AH"), adj = 0.35, line = 3, col.main = "blue"))
# abline(v=8, col = "red", lty = 3)
par(new=TRUE)
#AV
plot(AV_Matrix[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="black",pch=2,title(expression(main = "AV"), adj = 0.6, line = 3, col.main = "black"))
par(new=TRUE)
#AwPDC
plot(AwPDC[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="red",pch=3,title(expression(main = "AwPDC"), adj = 0.3, line = 1.5, col.main = "red"))
par(new=TRUE)
#AwSTUD
plot(AwPDC[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="green",pch=4,title(expression(main = "AwSTUD"), adj = 0.75, line = 1.5, col.main = "green"))
#BU_AH
plot(BU_AH_Matrix[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="blue",pch=1,title(expression(main = "BU_AH"), adj = 0.3, line = 3, col.main = "blue"))
# abline(v=8, col = "red", lty = 3)
par(new=TRUE)
#BU_AV
plot(BU_AV_Matrix[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="black",pch=2,title(expression(main = "BU_AV"), adj = 0.8, line = 3, col.main = "black"))
par(new=TRUE)
#BU_AwPDC
plot(BU_AwPDC[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="red",pch=3,title(expression(main = "BU_AwPDC"), adj = 0.1, line = 1.5, col.main = "red"))
par(new=TRUE)
#BU_AwSTUD
plot(BU_AwPDC[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="green",pch=4,title(expression(main = "BU_AwSTUD"), adj = 1, line = 1.5, col.main = "green"))
}
plott <- function() {
#######################PLOTS
# #WOB
par(mfrow=c(1,8))
a <- data.frame(seq(1,Num_of_Data))
# #---------------------------------
plot(WOB[,1],a[,1], ylim = rev(range(a[,1])), ylab = "Depth ft", xlab = "", col="blue",
pch=1,title(expression(main = "WOB (lbf)"), adj = 0.5, line = 2, col.main = "blue"),xlim = c(0,45000))
par(new=TRUE)
#CCS
plot(CCS[,1],a[,1], ylim = rev(range(a[,1])), axes=F, ylab = NA, xlab = NA,
col="red",pch=2,title(expression(main = "CCS (psi)"), adj = 0.5, line = 0.7, col.main = "red"),xlim = c(0,50000))
# axis(side = 4)
# mtext(side = 4, line = 3, 'Number genes selected')
par(new=FALSE)
# #RPM
plot(RPM[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="red",pch=1,title(expression(main = "RPM"), col.main = "red"),xlim = c(0,400))
#cutter_worn_vol_each_datapoint
plot(cutter_worn_vol_each_datapoint[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="black",pch=1,title(expression(main = "Cutter worn volume each data point (in3)"), col.main = "black"))
par(new=TRUE)
plot(comulative_cutter_worn_vol[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="red",pch=2,title(expression(main = "Comulative cutter worn volume (in3)"), adj = 0.5, line = 0.7, col.main = "red"))
#ROP
plot(ROP[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="black",pch=1,title(expression(main = "ROP (ft/hr)")),xlim = c(0,500))
par(new=FALSE)
#BG
plot(BG[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="black",pch=1,title(expression(main = "Front Cutter BG"), col.main = "black"),xlim = c(0,10))
par(new=TRUE)
#BU_BG
plot(BU_BG[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="blue",pch=2,title(expression(main = "Back up Cutter BG"), adj = 0.5, line = 0.7, col.main = "blue"),xlim = c(0,10))
abline(v=8, col = "red", lty = 3)
par(new=FALSE)
#DOC_real
plot(DOC_real[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="black",pch=1,title(expression(main = "Front cutter real depth of cut (in)"), adj = 0.5, line = 3.2, col.main = "black"))
par(new=TRUE)
#DOC_real
plot(BU_DOC_real[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="red",pch=2,title(expression(main = "Back Up cutter real depth of cut (in)"), adj = 0.5, line = 1.9, col.main = "red"))
par(new=TRUE)
#
#EXPR_realtime
plot(EXPR_realtime[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="blue",pch=3,title(expression(main = "Real time Exposure (in)"), adj = 0.5, line = 0.7, col.main = "blue"),xlim = c(0,EXPR_new))
abline(v=EXPR_new, col = "gray60", lty = 1)
text(EXPR_new-0.005,Num_of_Data,"EXPR New",srt=90,pos=3,col="gray60")
abline(v=0, col = "gray60", lty = 1)
text(0.01,3,"EXPR = 0",srt=90,pos=3,col="gray60")
par(new=FALSE)
#AH
plot(AH_Matrix[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="blue",pch=1,title(expression(main = "AH"), adj = 0.35, line = 3, col.main = "blue"))
# abline(v=8, col = "red", lty = 3)
par(new=TRUE)
#AV
plot(AV_Matrix[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="black",pch=2,title(expression(main = "AV"), adj = 0.6, line = 3, col.main = "black"))
par(new=TRUE)
#AwPDC
plot(AwPDC[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="red",pch=3,title(expression(main = "AwPDC"), adj = 0.3, line = 1.5, col.main = "red"))
par(new=TRUE)
#AwSTUD
plot(AwPDC[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="green",pch=4,title(expression(main = "AwSTUD"), adj = 0.75, line = 1.5, col.main = "green"))
#BU_AH
plot(BU_AH_Matrix[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="blue",pch=1,title(expression(main = "BU_AH"), adj = 0.3, line = 3, col.main = "blue"))
# abline(v=8, col = "red", lty = 3)
par(new=TRUE)
#BU_AV
plot(BU_AV_Matrix[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="black",pch=2,title(expression(main = "BU_AV"), adj = 0.8, line = 3, col.main = "black"))
par(new=TRUE)
#BU_AwPDC
plot(BU_AwPDC[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="red",pch=3,title(expression(main = "BU_AwPDC"), adj = 0.1, line = 1.5, col.main = "red"))
par(new=TRUE)
#BU_AwSTUD
plot(BU_AwPDC[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="green",pch=4,title(expression(main = "BU_AwSTUD"), adj = 1, line = 1.5, col.main = "green"))
}
plott
plott
plott <- function() {
#######################PLOTS
# #WOB
par(mfrow=c(1,8))
a <- data.frame(seq(1,Num_of_Data))
# #---------------------------------
p1 <- plot(WOB[,1],a[,1], ylim = rev(range(a[,1])), ylab = "Depth ft", xlab = "", col="blue",
pch=1,title(expression(main = "WOB (lbf)"), adj = 0.5, line = 2, col.main = "blue"),xlim = c(0,45000))
par(new=TRUE)
#CCS
plot(CCS[,1],a[,1], ylim = rev(range(a[,1])), axes=F, ylab = NA, xlab = NA,
col="red",pch=2,title(expression(main = "CCS (psi)"), adj = 0.5, line = 0.7, col.main = "red"),xlim = c(0,50000))
# axis(side = 4)
# mtext(side = 4, line = 3, 'Number genes selected')
par(new=FALSE)
# #RPM
plot(RPM[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="red",pch=1,title(expression(main = "RPM"), col.main = "red"),xlim = c(0,400))
#cutter_worn_vol_each_datapoint
plot(cutter_worn_vol_each_datapoint[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="black",pch=1,title(expression(main = "Cutter worn volume each data point (in3)"), col.main = "black"))
par(new=TRUE)
plot(comulative_cutter_worn_vol[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="red",pch=2,title(expression(main = "Comulative cutter worn volume (in3)"), adj = 0.5, line = 0.7, col.main = "red"))
#ROP
plot(ROP[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="black",pch=1,title(expression(main = "ROP (ft/hr)")),xlim = c(0,500))
par(new=FALSE)
#BG
plot(BG[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="black",pch=1,title(expression(main = "Front Cutter BG"), col.main = "black"),xlim = c(0,10))
par(new=TRUE)
#BU_BG
plot(BU_BG[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="blue",pch=2,title(expression(main = "Back up Cutter BG"), adj = 0.5, line = 0.7, col.main = "blue"),xlim = c(0,10))
abline(v=8, col = "red", lty = 3)
par(new=FALSE)
#DOC_real
plot(DOC_real[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="black",pch=1,title(expression(main = "Front cutter real depth of cut (in)"), adj = 0.5, line = 3.2, col.main = "black"))
par(new=TRUE)
#DOC_real
plot(BU_DOC_real[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="red",pch=2,title(expression(main = "Back Up cutter real depth of cut (in)"), adj = 0.5, line = 1.9, col.main = "red"))
par(new=TRUE)
#
#EXPR_realtime
plot(EXPR_realtime[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="blue",pch=3,title(expression(main = "Real time Exposure (in)"), adj = 0.5, line = 0.7, col.main = "blue"),xlim = c(0,EXPR_new))
abline(v=EXPR_new, col = "gray60", lty = 1)
text(EXPR_new-0.005,Num_of_Data,"EXPR New",srt=90,pos=3,col="gray60")
abline(v=0, col = "gray60", lty = 1)
text(0.01,3,"EXPR = 0",srt=90,pos=3,col="gray60")
par(new=FALSE)
#AH
plot(AH_Matrix[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="blue",pch=1,title(expression(main = "AH"), adj = 0.35, line = 3, col.main = "blue"))
# abline(v=8, col = "red", lty = 3)
par(new=TRUE)
#AV
plot(AV_Matrix[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="black",pch=2,title(expression(main = "AV"), adj = 0.6, line = 3, col.main = "black"))
par(new=TRUE)
#AwPDC
plot(AwPDC[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="red",pch=3,title(expression(main = "AwPDC"), adj = 0.3, line = 1.5, col.main = "red"))
par(new=TRUE)
#AwSTUD
plot(AwPDC[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="green",pch=4,title(expression(main = "AwSTUD"), adj = 0.75, line = 1.5, col.main = "green"))
#BU_AH
plot(BU_AH_Matrix[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="blue",pch=1,title(expression(main = "BU_AH"), adj = 0.3, line = 3, col.main = "blue"))
# abline(v=8, col = "red", lty = 3)
par(new=TRUE)
#BU_AV
plot(BU_AV_Matrix[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="black",pch=2,title(expression(main = "BU_AV"), adj = 0.8, line = 3, col.main = "black"))
par(new=TRUE)
#BU_AwPDC
plot(BU_AwPDC[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="red",pch=3,title(expression(main = "BU_AwPDC"), adj = 0.1, line = 1.5, col.main = "red"))
par(new=TRUE)
#BU_AwSTUD
plot(BU_AwPDC[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="green",pch=4,title(expression(main = "BU_AwSTUD"), adj = 1, line = 1.5, col.main = "green"))
return(p1)
}
plott
plott
#######################PLOTS
# #WOB
par(mfrow=c(1,8))
a <- data.frame(seq(1,Num_of_Data))
# #---------------------------------
plot(WOB[,1],a[,1], ylim = rev(range(a[,1])), ylab = "Depth ft", xlab = "", col="blue",
pch=1,title(expression(main = "WOB (lbf)"), adj = 0.5, line = 2, col.main = "blue"),xlim = c(0,45000))
par(new=TRUE)
#CCS
plot(CCS[,1],a[,1], ylim = rev(range(a[,1])), axes=F, ylab = NA, xlab = NA,
col="red",pch=2,title(expression(main = "CCS (psi)"), adj = 0.5, line = 0.7, col.main = "red"),xlim = c(0,50000))
# axis(side = 4)
# mtext(side = 4, line = 3, 'Number genes selected')
par(new=FALSE)
# #RPM
plot(RPM[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="red",pch=1,title(expression(main = "RPM"), col.main = "red"),xlim = c(0,400))
#cutter_worn_vol_each_datapoint
plot(cutter_worn_vol_each_datapoint[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="black",pch=1,title(expression(main = "Cutter worn volume each data point (in3)"), col.main = "black"))
par(new=TRUE)
plot(comulative_cutter_worn_vol[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="red",pch=2,title(expression(main = "Comulative cutter worn volume (in3)"), adj = 0.5, line = 0.7, col.main = "red"))
#ROP
plot(ROP[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="black",pch=1,title(expression(main = "ROP (ft/hr)")),xlim = c(0,500))
par(new=FALSE)
#BG
plot(BG[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="black",pch=1,title(expression(main = "Front Cutter BG"), col.main = "black"),xlim = c(0,10))
par(new=TRUE)
#BU_BG
plot(BU_BG[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="blue",pch=2,title(expression(main = "Back up Cutter BG"), adj = 0.5, line = 0.7, col.main = "blue"),xlim = c(0,10))
abline(v=8, col = "red", lty = 3)
par(new=FALSE)
#DOC_real
plot(DOC_real[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="black",pch=1,title(expression(main = "Front cutter real depth of cut (in)"), adj = 0.5, line = 3.2, col.main = "black"))
par(new=TRUE)
#DOC_real
plot(BU_DOC_real[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="red",pch=2,title(expression(main = "Back Up cutter real depth of cut (in)"), adj = 0.5, line = 1.9, col.main = "red"))
par(new=TRUE)
#
#EXPR_realtime
plot(EXPR_realtime[,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="blue",pch=3,title(expression(main = "Real time Exposure (in)"), adj = 0.5, line = 0.7, col.main = "blue"),xlim = c(0,EXPR_new))
abline(v=EXPR_new, col = "gray60", lty = 1)
text(EXPR_new-0.005,Num_of_Data,"EXPR New",srt=90,pos=3,col="gray60")
abline(v=0, col = "gray60", lty = 1)
text(0.01,3,"EXPR = 0",srt=90,pos=3,col="gray60")
par(new=FALSE)
#AH
plot(AH_Matrix[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="blue",pch=1,title(expression(main = "AH"), adj = 0.35, line = 3, col.main = "blue"))
# abline(v=8, col = "red", lty = 3)
par(new=TRUE)
#AV
plot(AV_Matrix[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="black",pch=2,title(expression(main = "AV"), adj = 0.6, line = 3, col.main = "black"))
par(new=TRUE)
#AwPDC
plot(AwPDC[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="red",pch=3,title(expression(main = "AwPDC"), adj = 0.3, line = 1.5, col.main = "red"))
par(new=TRUE)
#AwSTUD
plot(AwPDC[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="green",pch=4,title(expression(main = "AwSTUD"), adj = 0.75, line = 1.5, col.main = "green"))
#BU_AH
plot(BU_AH_Matrix[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "",
col="blue",pch=1,title(expression(main = "BU_AH"), adj = 0.3, line = 3, col.main = "blue"))
# abline(v=8, col = "red", lty = 3)
par(new=TRUE)
#BU_AV
plot(BU_AV_Matrix[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="black",pch=2,title(expression(main = "BU_AV"), adj = 0.8, line = 3, col.main = "black"))
par(new=TRUE)
#BU_AwPDC
plot(BU_AwPDC[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="red",pch=3,title(expression(main = "BU_AwPDC"), adj = 0.1, line = 1.5, col.main = "red"))
par(new=TRUE)
#BU_AwSTUD
plot(BU_AwPDC[1:99,1],a[,1], ylim = rev(range(a[,1])),ylab = "",xlab = "", axes=F,
col="green",pch=4,title(expression(main = "BU_AwSTUD"), adj = 1, line = 1.5, col.main = "green"))
reticulate::repl_python()
