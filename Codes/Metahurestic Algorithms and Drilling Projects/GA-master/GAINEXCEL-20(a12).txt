Sub population1()
'clear content of before calculations
Dim q, h As Integer
Range(Cells(3, 1), Cells(Cells(2, 1) * Cells(1, 20) * Cells(2, 1) + 11, 4 * Cells(1, 21) + 13)).Select
Selection.Clear
Cells(1, 1).Select
'End of clear content of before calculations
Cells(2, 10) = clc
Cells(2, 11) = clc
Cells(2, 10) = "F(X)"
For i = 1 To Cells(2, 1)
Cells(i + 2, 10) = "X" & i
Next i

Cells(3, 9).Clear


'Define variables
Dim n1, n2, n3, j, n4 As Integer
Dim a As Double
Dim X, NP, NB, NE As Integer
X = Cells(2, 1)
NP = Cells(2, 2)
NB = Cells(2, 3)
Dim Xl, XU As Double
Xl = Cells(2, 4)
XU = Cells(2, 5)

a = 0
For i = 0 To (NP * X) - X Step X
a = a + 1
  Cells(7 + X + X + i, 1) = a
Next i

'n1=number of desire row
'n2=number of bits
'n3=number of variables
n1 = Cells(2, 2) * 2 + 10
n2 = Cells(2, 3)
n3 = Cells(2, 1)

For i = 1 To Cells(2, 2)

  For j = 1 To Cells(2, 1)
    Cells(j + Cells(2, 1) * i - Cells(2, 1) + 7 + X, 2) = "X" & j
  Next j
  
Next i
'\/\/\/\/\/\/\/\/\/\/\/\/\/\
'Generate initial population
For i = 8 + X To (X * Cells(2, 2) + 7 + X)

  For j = 3 To n2 + 2
  
    a = Rnd
    Cells(i, j) = Round(a)
    
  Next j
  
Next i
h = 0
Dim ite As Integer
ite = 0
 Dim man As Integer
    man = 1
'-----------------------------------------------------------------------------------------
Do
Beep
ite = ite + 1
Cells(3, 9) = ite
If q = True Then
q = False
Else
q = True
End If


'-----------------------------------------------------------------------------------------

'End of Generate initial population
'\/\/\/\/\/\/\/\/\/\/\/\/\/\
'S and code CALCULATION

For j = 1 To (NP * X)
  Cells(j + 7 + X, NB + 3) = 0
  For i = 1 To NB
    Cells(j + 7 + X, NB + 3) = Cells(j + 7 + X, NB + 3) + (2 ^ (i - 1)) * Cells(j + 7 + X, 3 + NB - i)


    
  Next i
  'CODE CALCULATION
  Cells(j + 7 + X, NB + 4) = (Cells(j + 7 + X, NB + 3) * ((XU - Xl) / (2 ^ NB - 1))) + Xl

Next j

'END OF S and code CALCULATION
'\/\/\/\/\/\/\/\/\/\/\/\/\/\
'Fittness Function Calculation
'[][][][][][][][][][][][][][][





Dim x1, x2, x3 As Double
'Dim w As Integer
'w = True
 'Dim man As Integer
  '  man = 1

   Dim f(1 To 10000) As Double

For i = 0 To (NP * X) - X Step X

  x1 = Cells(8 + X + i, NB + 4)
  x2 = Cells(9 + X + i, NB + 4)
 x3 = Cells(10 + X + i, NB + 4)
  Cells(7 + X + X + i, NB + 5) = -(Sin(x1) + Cos(x2) + Sin(x3))
        f(1) = Cells(7 + X + X, NB + 5)



   If f(man) <= Cells(7 + X + X + i, NB + 5) Then
      man = man + 1
      f(man) = Cells(7 + X + X + i, NB + 5)
      Cells(2, 11) = f(man)
      Cells(3, 11) = x1
      Cells(4, 11) = x2
      Cells(5, 11) = x3
      End If
      
   

  
Next i









'End of fittness function calculation
'\/\/\/\/\/\/\/\/\/\/\/\/\/\'\/\/\/\/\/\/\/\/\/\/\/\/\/\
'Tounoment method for selection

a = 0
For i = 0 To NP * X Step X
  a = a + Cells(7 + X + X + i, 5 + NB)
Next i

Cells(8 + X - X + i, 5 + NB) = a
For i = 0 To ((NP * X)) - X Step X
  Cells(7 + X + X + i, NB + 6) = Cells(7 + X + X + i, NB + 5) / a
  Cells(7 + X + X + i, NB + 7) = Int((NP * Rnd) + 1)
  Cells(7 + X + X + i, NB + 8) = Int((NP * Rnd) + 1)
  
Next i
Cells(8 + X + (NP * X), 5 + NB) = Clear
'selection with tournoment method

Dim ab(1 To 100000) As Double
Dim b As Integer
b = 0
  For i = 0 To (NP * X - X) Step X
   b = b + 1
   ab(b) = Cells(7 + X + X + i, NB + 5)
  Next i
  
  
For i = 0 To (NP * X - X) Step X
b = 0
  For j = 1 To NP
   b = b + 1
    If Cells(7 + X + X + i, NB + 7) = j Then
    Cells(7 + X + X + i, NB + 9) = ab(b)
    End If
    
    If Cells(7 + X + X + i, NB + 8) = j Then
    Cells(7 + X + X + i, NB + 10) = ab(b)
    End If
  Next j
  
  
Next i
'\/\/\/\/\/\/\/\/\/\/\/\/\/\
'winner selection

For i = 0 To (NP * X - X) Step X
   
    If Cells(7 + X + X + i, NB + 9) > Cells(7 + X + X + i, NB + 10) Then
    Cells(7 + X + X + i, NB + 11) = Cells(7 + X + X + i, NB + 7)
    Else
    Cells(7 + X + X + i, NB + 11) = Cells(7 + X + X + i, NB + 8)
    End If
Next i
'\/\/\/\/\/\/\/\/\/\/\/\/\/\
'selection binary codes between winners
  For i = 0 To (NP * X - X) Step X
   For j = 1 To NP
     If Cells(7 + X + X + i, NB + 11) = j Then
     Range(Cells(8 + X - X + X * j, 3), Cells(7 + X + X * j, NB + 2)).Select
     Selection.Copy
     Range(Cells(8 + X + i, NB + 12), Cells(7 + X + X + i, 2 * NB + 11)).Select
     ActiveSheet.Paste
   
    End If
    Next j
    
  Next i
  Application.CutCopyMode = False

'End of selection binary codes between winners
'\/\/\/\/\/\/\/\/\/\/\/\/\/\'\/\/\/\/\/\/\/\/\/\/\/\/\/\
'Cross over calculation
Dim GCP As Integer
Dim GS1, GS2 As Double

For i = 1 To NP * X

  Do
  'Genes selection [1-16]
   GS1 = Int(((NP * X - 1) - 0 + 1) * Rnd + 0)
   GS2 = Int(((NP * X - 1) - 0 + 1) * Rnd + 0)
  Loop Until GS1 <> GS2
  'Genes crossover point [1-3]
  GCP = Int(((NB - 1) - 1 + 1) * Rnd + 1)
  Range(Cells(GS1 + 8 + X, 12 + NB), Cells(8 + X + GS1, 11 + NB + GCP)).Select
  Selection.Copy
  Range(Cells(7 + X + i, 12 + 2 * NB), Cells(7 + X + i, GCP + 11 + 2 * NB)).Select
  ActiveSheet.Paste
  Range(Cells(GS2 + 8 + X, 12 + NB + GCP), Cells(8 + X + GS2, 11 + 2 * NB)).Select
  Selection.Copy
  Range(Cells(7 + X + i, 12 + 2 * NB + GCP), Cells(7 + X + i, 11 + 3 * NB)).Select
  ActiveSheet.Paste
Next i
  Application.CutCopyMode = False
'End Cross over calculation
'\/\/\/\/\/\/\/\/\/\/\/\/\/\'\/\/\/\/\/\/\/\/\/\/\/\/\/\
'Mutaion Calculation

Pm = Cells(2, 7)
For i = 1 To NP * X
  For j = 1 To NB
    a = Rnd
    If a < Pm Then
      If Cells(i + 7 + X, 2 * NB + 11 + j) = 0 Then
         Cells(i + 7 + X, 3 * NB + 11 + j) = 1
         Else
         Cells(i + 7 + X, 3 * NB + 11 + j) = 0
      End If
      Else
      Cells(i + 7 + X, 3 * NB + 11 + j) = Cells(i + 7 + X, 2 * NB + 11 + j)
    End If
  Next j
Next i
'End of Mutaion Calculation
'\/\/\/\/\/\/\/\/\/\/\/\/\/\'\/\/\/\/\/\/\/\/\/\/\/\/\/\
'[[code calculation2
For j = 1 To (NP * X)
  Cells(j + 7 + X, 4 * NB + 12) = 0
  For i = 1 To NB
    Cells(j + 7 + X, 4 * NB + 12) = Cells(j + 7 + X, 4 * NB + 12) + (2 ^ (i - 1)) * Cells(j + 7 + X, 4 * NB + 12 - i)


    
  Next i
   'CODE CALCULATION2
  Cells(j + 7 + X, 4 * NB + 13) = (Cells(j + 7 + X, 4 * NB + 12) * ((XU - Xl) / (2 ^ NB - 1))) + Xl


  Next j
'[[end of code calculation2
'Fittness Function Calculation
'[][][][][][][][][][][][][][][
'Dim x1, x2 As Double
For i = 0 To (NP * X) - X Step X



  x1 = Cells(8 + X + i, 4 * NB + 13)
  x2 = Cells(9 + X + i, 4 * NB + 13)
x3 = Cells(10 + X + i, NB + 4)

  Cells(7 + X + X + i, 4 * NB + 14) = -(Sin(x1) + Cos(x2) + Sin(x3))
Next i

'End of fittness function calculation
'\/\/\/\/\/\/\/\/\/\/\/\/\/\'\/\/\/\/\/\/\/\/\/\/\/\/\/\
For i = 0 To (NP * X) - X Step X

 If Cells(7 + X + X + i, 4 * NB + 14) > Cells(7 + X + X + i, NB + 5) Then

   'Cells(10 + X + i, 4 * NB + 14) = -(Sin(x1) + Cos(x2)) '+ Sin(x3))
Range(Cells(8 + X + i, 3 * NB + 12), Cells(7 + X + X + i, 4 * NB + 11)).Select
Selection.Copy
Range(Cells(8 + X + i, 3), Cells(7 + X + X + i, 2 + NB)).Select
  ActiveSheet.Paste
  End If
Next i

  Application.CutCopyMode = False







'--------------------------------------------------------------------------------
Loop Until Abs(f(man - 1) - f(man)) < Cells(2, 8) Or ite = Cells(2, 9)

Cells(3, 9) = ite




'----------------------------------------------------------------------------------------
Cells(1, 20) = Cells(2, 2)
Cells(1, 21) = Cells(2, 3)
Application.CutCopyMode = False
Cells(1, 1).Select
End Sub





